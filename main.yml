---
- name: Configure hosts.
  hosts: macmini, macbook
  gather_facts: true

  vars_files:
    - default.config.yml

  environment:
    PATH: "/opt/homebrew/bin:/opt/homebrew/sbin:{{ ansible_env.PATH }}"

  pre_tasks:
    - name: Include playbook configuration.
      include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/config.yml"
      tags: ['always']

    # - name: Ensure .zprofile exists
    #   ansible.builtin.copy:
    #     content: ""
    #     dest: "/Users/{{ ansible_user_id }}/.zprofile"
    #     force: false    
        
    # - name: Ensure brew path in ~/.zprofile
    #   ansible.builtin.lineinfile:
    #     state: present
    #     path: "/Users/{{ ansible_user_id }}/.zprofile"
    #     line: eval "$({{ (ansible_machine == 'arm64') | ternary('/opt/homebrew', '/usr/local') }}/bin/brew shellenv)"
    #   tags: ['homebrew']

    # - name: Ensure dock path in ~/.zprofile
    #   ansible.builtin.lineinfile:
    #     state: present
    #     path: "/Users/{{ ansible_user_id }}/.zprofile"
    #     line: eval "$({{ (ansible_machine == 'arm64') | ternary('/opt/homebrew', '/usr/local') }}/bin/dockutil shellenv)"
    #   tags: ['dock']

  roles:
    - role: elliotweiser.osx-command-line-tools
    - role: geerlingguy.mac.homebrew
      tags: ['homebrew']
      environment:
        PATH: "/opt/homebrew/bin/:/usr/local/bin/:{{ ansible_env.PATH }}"
    - role: geerlingguy.dotfiles
      when: configure_dotfiles
      tags: ['dotfiles']
    - role: geerlingguy.mac.mas
      when: mas_installed_apps or mas_installed_app_ids
      tags: ['mas']
      environment:
        PATH: "/opt/homebrew/bin/:/usr/local/bin/:{{ ansible_env.PATH }}"
    - role: ansible-role-dock
      when: configure_dock
      tags: ['dock']
      environment:
        PATH: "/usr/local/bin/:{{ ansible_env.PATH }}"

  tasks:
    # Install host-specific Homebrew formulae
    - name: Install Mac mini-only Homebrew formulae
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_macmini_packages }}"
      when: "'macmini' in group_names"
      become: true
      become_user: "{{ ansible_user_id }}"
      tags: ['homebrew']

    - name: Install MacBook-only Homebrew formulae
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_macbook_packages }}"
      when: "'macbook' in group_names"
      become: true
      become_user: "{{ ansible_user_id }}"
      tags: ['homebrew']

    # Install host-specific Homebrew casks
    - name: Install Mac mini-only Homebrew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_macmini_cask_apps }}"
      when: "'macmini' in group_names"
      become: true
      become_user: "{{ ansible_user_id }}"
      tags: ['homebrew']

    - name: Install MacBook-only Homebrew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_macbook_cask_apps }}"
      when: "'macbook' in group_names"
      become: true
      become_user: "{{ ansible_user_id }}"
      tags: ['homebrew']

    - ansible.builtin.debug:
        msg: "This playbook is running properly."
    - ansible.builtin.import_tasks: tasks/sudoers.yml
      when: configure_sudoers
      tags: ['sudoers']

    # - ansible.builtin.import_tasks: tasks/terminal.yml
    #   when: configure_terminal
    #   tags: ['terminal']

    # - ansible.builtin.import_tasks: tasks/osx.yml
    #   when: configure_osx
    #   tags: ['osx']

    # - ansible.builtin.import_tasks: tasks/extra-packages.yml
    #   tags: ['extra-packages']

    # - ansible.builtin.import_tasks: tasks/sublime-text.yml
    #   when: configure_sublime
    #   tags: ['sublime-text']

    - name: Run post-provision task files in a block.
      tags: ['post']
      block:
        - name: Run configured post-provision ansible task files.
          ansible.builtin.include_tasks: "{{ outer_item }}"
          loop_control:
            loop_var: outer_item
          with_fileglob: "{{ post_provision_tasks | default(omit) }}"
