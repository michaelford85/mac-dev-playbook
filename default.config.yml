---
# This variable determines whether dotfiles should be configured.
# Set it to `true` if you want to configure dotfiles, or `false` otherwise.
configure_dotfiles: true

# This variable is used to configure the dock.
configure_dock: true

# This variable determines whether to configure sudoers.
# Set it to `true` if you want to configure sudoers, or `false` otherwise.
configure_sudoers: true

# Variable: configure_terminal
# Description: Specifies whether to configure the terminal settings.
#   If set to `true`, the terminal settings will be configured.
#   If set to `false`, the terminal settings will not be configured.
configure_terminal: false

# The local path where the Dropbox folder is located.
# This variable specifies the path to the Dropbox folder on the local machine.
# It uses the `ansible_user_id` variable to dynamically construct the path based on the current user.
dropbox_local_path: "/Users/{{ ansible_user_id }}/Library/CloudStorage/Dropbox"

# The `home_path` variable specifies the path to the home directory of the user running the Ansible playbook.
home_path: "/Users/{{ ansible_user_id }}"


# The version of ansible to install in the ~/venvs/absible virtual environment on the destination mac.
# Use the following to see what the latest available version is:
# $pip3 index versions ansible-core
ansible_version_mac: 2.17.1

# Description: The password used for privilege escalation when running Ansible tasks.
#              This password is required when the `ansible_become` option is set to `true`.
#              It should be a strong and secure password to ensure the safety of the system.
# ansible_become_password: abc123

# The `sudoers_custom_config` variable is used to specify custom configuration for the sudoers file.
# This variable should contain the contents of the custom configuration as a string.
sudoers_custom_config: |
 # Allow users in admin group to use sudo with no password.
 %admin    ALL = (ALL) ALL

# The variable `homebrew_cask_appdir` specifies the directory where Homebrew Cask applications will be installed on macOS.
# By default, it is set to `/Applications`.
homebrew_cask_appdir: /Applications

# Variable: homebrew_cask_accept_external_apps
# Description: Determines whether external apps are accepted when installing Homebrew casks.
# Default Value: false
homebrew_cask_accept_external_apps: false

# Variable: homebrew_cask_uninstalled_apps
#
# Description:
# This variable is used to specify a list of Homebrew Cask applications that should be uninstalled.
#
# Example:
# homebrew_cask_uninstalled_apps:
#   - google-chrome
#   - slack
#   - visual-studio-code
#
# Note:
# Make sure to provide the exact names of the applications as they are listed in Homebrew Cask.
homebrew_cask_uninstalled_apps:
  - authy
  - inkscape
  - gather
  - pgadmin4

# Variable: homebrew_uninstalled_packages
# Description: This variable is used to store a list of Homebrew packages should be uninstalled.
#              It is an empty list by default.
homebrew_uninstalled_packages: []

# Variable: homebrew_installed_packages
# Description: This variable is used to specify a list of Homebrew packages that should be installed on the system.
#              Homebrew is a package manager for macOS that allows you to easily install and manage software packages.
#              By specifying a list of packages in this variable, you can ensure that these packages are installed on the system during the playbook execution.
#              Each package should be specified as a separate item in the list.
# Example: homebrew_installed_packages:
#            - git
#            - python
#            - node
homebrew_installed_packages:
  - augeas
  - awscli
  - bash-completion
  - bdw-gc
  - brotli
  - buildkit
  - c-ares
  - ca-certificates
  - capstone
  - certbot
  - certifi
  - cffi
  - cryptography
  - dialog
  - docker-buildx
  - docker-compose
  - dockutil
  - docutils
  - dtc
  - gettext
  - git
  - glib
  - gmp
  - gnutls
  - guile
  - helm
  - icu4c
  - jpeg-turbo
  - krb5
  - kubernetes-cli
  - kustomize
  - libevent
  - libidn2
  - libnghttp2
  - libpng
  - libpq
  - libslirp
  - libssh
  - libtasn1
  - libtool
  - libunistring
  - libusb
  - libuv
  - lz4
  - lzo
  - m4
  - make
  - mas
  - mpdecimal
  - ncurses
  - nettle
  - node
  - openssl@3
  - p11-kit
  - packer
  - pcre2
  - pgcli
  - pixman
  - pkg-config
  - podman
  - pv
  - pycparser
  - pygments
  - python-certifi
  - python-cryptography
  - python-setuptools
  - python-tabulate
  - python@3.11
  - python@3.12
  - qemu
  - readline
  - six
  - snappy
  - sqlite
  - ssh-copy-id
  - telnet
  - terraform
  - unbound
  - vde
  - virtualenv
  - wget
  - xz
  - zstd

# Variable: homebrew_taps
# Description: A list of Homebrew taps to be installed.
# Default value: []
homebrew_taps: []
  # - homebrew/core
  # - homebrew/cask

# Variable: homebrew_cask_apps
# Description: This variable is used to specify a list of Homebrew Cask applications to be installed.
#              Homebrew Cask is a package manager for macOS that allows you to install applications
#              from the command line. This variable should be a list of application names.
# Example: homebrew_cask_apps:
#            - google-chrome
#            - visual-studio-code
#            - slack
homebrew_cask_apps:
  - 1password
  - adobe-acrobat-pro
  - aldente
  - amazon-chime
  - ao
  - balenaetcher
  - brave-browser
  - calibre
  - chatgpt
  - cleanmymac
  - daisydisk
  - docker
  - dropbox
  - expressvpn
  - firefox
  - google-chrome
  - google-cloud-sdk
  - handbrake
  - keyboardcleantool
  - kindle
  - logi-options-plus
  - logseq
  - makemkv
  - microsoft-teams
  - monitorcontrol
  - podman-desktop
  - postman
  - raspberry-pi-imager
  - rectangle
  - slack
  - spotify
  - steam
  - visual-studio-code
  - vlc
  - webex
  - whatsapp
  - zoom

# Variable: mas_installed_apps
# Description: This variable stores a list of Mac App Store apps to be installed.
#              Each app is represented by its unique identifier.
# Example: 
#   - 497799835  # Xcode
#   - 803453959  # Slack
#   - 409183694  # Keynote
mas_installed_apps:
  - { id: 302584613, name: "Kindle" }
  - { id: 1295203466, name: "Microsoft Remote Desktop" }
  - { id: 462054704, name: "Microsoft Word" }
  - { id: 462058435, name: "Microsoft Excel" }
  - { id: 409203825, name: "Numbers" }
  - { id: 409201541, name: "Pages" }
  - { id: 1276493162, name: "reMarkable" }
  - { id: 1230249825, name: "VMware Remote Console" }
  - { id: 1451685025, name: "WireGuard" }

# This variable controls whether all Mac App Store apps should be upgraded.
mas_upgrade_all_apps: true

# The URL of the repository containing the dotfiles.
dotfiles_repo: "https://github.com/michaelford85/dotfiles.git"
dotfiles_repo_version: master
dotfiles_repo_accept_hostkey: false
dotfiles_repo_local_destination: "/Users/{{ ansible_user_id }}/Documents/dotfiles"
dotfiles_home: "/Users/{{ ansible_user_id }}"
dotfiles_files:
  - .zshrc
  - .vimrc


dock_dockutil_path: /opt/homebrew/bin/dockutil

dock_dockitems_erase_all: true

dock_dockutil_install: false

# The `dock_dockitems` variable represents the list of items to be displayed in the Dock.
dock_dockitems:
  - label: "Launchpad"
    path: "/Applications/Launchpad.app/"
    action: add
    position: 1
  - label: "Spotify"
    path: "/Applications/Spotify.app/"
    action: add
    position: 2
  - label: "Google Chrome"
    path: "/Applications/Google Chrome.app/"
    action: add
    position: 3
  - label: "Brave Browser"
    path: "/Applications/Brave Browser.app/"
    action: add
    position: 4
  - label: "Insta360 Link Controller"
    path: "/Applications/Insta360 Link Controller.app/"
    action: add
    position: 5
  - label: "WebEx"
    path: "/Applications/Webex.app/"
    action: add
    position: 6
  - label: "Microsoft Teams"
    path: "/Applications/Microsoft Teams.app/"
    action: add
    position: 7
  - label: "zoom.us"
    path: "/Applications/zoom.us.app/"
    action: add
    position: 8
  - label: "FaceTime"
    path: "/Applications/FaceTime.app/"
    action: add
    position: 9
  - label: "Messages"
    path: "/Applications/Messages.app/"
    action: add
    position: 10
  - label: "Slack"
    path: "/Applications/Slack.app/"
    action: add
    position: 11
  - label: "WhatsApp"
    path: "/Applications/WhatsApp.app/"
    action: add
    position: 12
  - label: "Ao"
    path: "/Applications/Ao.app/"
    action: add
    position: 13
  - label: "Microsoft Remote Desktop"
    path: "/Applications/Microsoft Remote Desktop.app/"
    action: add
    position: 14
  - label: "Terminal"
    path: "/Applications/Utilities/Terminal.app/"
    action: add
    position: 15
  - label: "Visual Studio Code"
    path: "/Applications/Visual Studio Code.app/"
    action: add
    position: 16
  - label: "Postman"
    path: "/Applications/Postman.app/"
    action: add
    position: 17
  - label: "Adobe Acrobat"
    path: "/Applications/Adobe Acrobat DC/Adobe Acrobat.app/"
    action: add
    position: 18
  - label: "ExpressVPN"
    path: "/Applications/ExpressVPN.app/"
    action: add
    position: 19
  - label: "System Settings"
    path: "/Applications/System Settings.app/"
    action: add
    position: 20
  - label: "Home"
    path: "/Applications/Home.app/"
    action: add
    position: 21
  - label: "VMWare Fusion"
    path: "/Applications/VMWare Fusion.app/"
    action: add
    position: 22
  - label: "reMarkable"
    path: "/Applications/reMarkable.app/"
    action: add
    position: 23
  - label: "Calculator"
    path: "/Applications/Calculator.app/"
    action: add
    position: 24

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks:
  - post_provision_tasks/create_git_environment.yml
  - post_provision_tasks/create_kube_directory.yml
  - post_provision_tasks/install_ansible.yml
